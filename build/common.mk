CONFIG ?= $(ALONIRA_DIR)/build/config.mk
include $(CONFIG)

HOST_MK ?= $(ALONIRA_DIR)/build/host.mk
include $(HOST_MK)

TARGET_MK ?= $(ALONIRA_DIR)/build/target.mk
include $(TARGET_MK)

HOST_CLINKER = $(CLANG) -fuse-ld=lld

HOST_GLOBAL_CFLAGS += -std=gnu2x
HOST_GLOBAL_CFLAGS += -flto -fvisibility=default
HOST_GLOBAL_CFLAGS += -DALO_DISABLED=0 -DALO_ENABLED=1
HOST_GLOBAL_CFLAGS += -DALO_DEBUG=0 -DALO_RELEASE=1 -DALO_BUILD_MODE=ALO_$(MODE)
HOST_GLOBAL_CFLAGS += -DALO_LINUX=0 -DALO_OSX=1 -DALO_WINDOWS=2 -DALONIRA=3 -DALO_PLATFORM=ALO_$(HOST)
HOST_GLOBAL_CFLAGS += $(HOST_EXTRA_CFLAGS)

HOST_GLOBAL_LFLAGS += -flto
HOST_GLOBAL_LFLAGS += $(HOST_EXTRA_LFLAGS)

TARGET_GLOBAL_CFLAGS += -std=gnu2x
TARGET_GLOBAL_CFLAGS += -flto -fvisibility=default
TARGET_GLOBAL_CFLAGS += -DALO_DISABLED=0 -DALO_ENABLED=1
TARGET_GLOBAL_CFLAGS += -DALO_DEBUG=0 -DALO_RELEASE=1 -DALO_BUILD_MODE=ALO_$(MODE)
TARGET_GLOBAL_CFLAGS += -DALONIRA=3 -DALO_PLATFORM=ALONIRA
TARGET_GLOBAL_CFLAGS += $(TARGET_EXTRA_CFLAGS)

TARGET_GLOBAL_LFLAGS += -flto
TARGET_GLOBAL_LFLAGS += $(TARGET_EXTRA_LFLAGS)

SAFLAGS = -D__ANALYZER -Xanalyzer -analyzer-output=text
SAFLAGS += -Xanalyzer -analyzer-checker=core -Xanalyzer -analyzer-checker=deadcode
SAFLAGS += -Xanalyzer -analyzer-checker=optin
SAFLAGS += -Xanalyzer -analyzer-checker=alpha.core
SAFLAGS += -Xanalyzer -analyzer-checker=alpha.deadcode

ifeq ($(MODE), DEBUG)
	HOST_GLOBAL_CFLAGS += -glldb -O0
	HOST_GLOBAL_CFLAGS += -fstandalone-debug -fno-eliminate-unused-debug-types -fdebug-macro -fno-omit-frame-pointer
	TARGET_GLOBAL_CFLAGS += -glldb -O0
	TARGET_GLOBAL_CFLAGS += -fstandalone-debug -fno-eliminate-unused-debug-types -fdebug-macro -fno-omit-frame-pointer
	TARGET_GLOBAL_ASMFLAGS += -g -Fdwarf -O0
	TARGET_GLOBAL_RAW_ASMFLAGS += -O0
endif

ifeq ($(MODE), RELEASE)
	HOST_GLOBAL_CFLAGS += -Ofast
	HOST_GLOBAL_CFLAGS += -ffast-math
	TARGET_GLOBAL_CFLAGS += -Ofast
	TARGET_GLOBAL_CFLAGS += -ffast-math
	TARGET_GLOBAL_ASMFLAGS += -Ox
	TARGET_GLOBAL_RAW_ASMFLAGS += -Ox
endif

ACTION_PREFIX = \\033[1;30m
ACTION_SUFFIX = \\033[0m

%$(HOST_OBJECT_SUFFIX): %.c
	@$(ECHO) "$(ACTION_PREFIX)$(CLANG) -c $(HOST_GLOBAL_CFLAGS) $(HOST_CFLAGS) -o $@ $<$(ACTION_SUFFIX)"
	@$(CLANG) -c $(HOST_GLOBAL_CFLAGS) $(HOST_CFLAGS) -o $@ $<

	@$(ECHO) "$(ACTION_PREFIX)$(CLANG) $(HOST_GLOBAL_CFLAGS) $(HOST_CFLAGS) --analyze $(SAFLAGS) $<$(ACTION_SUFFIX)"
	@$(CLANG) $(HOST_GLOBAL_CFLAGS) $(HOST_CFLAGS) --analyze $(SAFLAGS) $<

%$(HOST_STATIC_LIB_SUFFIX):
	@$(ECHO) "$(ACTION_PREFIX)$(HOST_STATIC_LIB_TOOL)$(ACTION_SUFFIX)"
	@$(HOST_STATIC_LIB_TOOL)

%$(HOST_DYNAMIC_LIB_SUFFIX):
	@$(ECHO) "$(ACTION_PREFIX)$(HOST_DYNAMIC_LIB_TOOL)$(ACTION_SUFFIX)"
	@$(HOST_DYNAMIC_LIB_TOOL)

%$(HOST_EXECUTABLE_SUFFIX):
	@$(ECHO) "$(ACTION_PREFIX)$(HOST_EXECUTABLE_TOOL)$(ACTION_SUFFIX)"
	@$(HOST_EXECUTABLE_TOOL)


%$(TARGET_C64_OBJECT_SUFFIX): %.c
	@$(ECHO) "$(ACTION_PREFIX)$(CLANG) -c $(TARGET_GLOBAL_CFLAGS) $(TARGET_GLOBAL_C64FLAGS) $(TARGET_CFLAGS) -o $@ $<$(ACTION_SUFFIX)"
	@$(CLANG) -c $(TARGET_GLOBAL_CFLAGS) $(TARGET_GLOBAL_C64FLAGS) $(TARGET_CFLAGS) -o $@ $<

	@$(ECHO) "$(ACTION_PREFIX)$(CLANG) $(TARGET_GLOBAL_CFLAGS) $(TARGET_GLOBAL_C64FLAGS) $(TARGET_CFLAGS) --analyze $(SAFLAGS) $<$(ACTION_SUFFIX)"
	@$(CLANG) $(TARGET_GLOBAL_CFLAGS) $(TARGET_GLOBAL_C64FLAGS) $(TARGET_CFLAGS) --analyze $(SAFLAGS) $<

%$(TARGET_C32_OBJECT_SUFFIX): %.c
	@$(ECHO) "$(ACTION_PREFIX)$(CLANG) -c $(TARGET_GLOBAL_CFLAGS) $(TARGET_GLOBAL_C32FLAGS) $(TARGET_CFLAGS) -o $@ $<$(ACTION_SUFFIX)"
	@$(CLANG) -c $(TARGET_GLOBAL_CFLAGS) $(TARGET_GLOBAL_C32FLAGS) $(TARGET_CFLAGS) -o $@ $<

	@$(ECHO) "$(ACTION_PREFIX)$(CLANG) $(TARGET_GLOBAL_CFLAGS) $(TARGET_GLOBAL_C32FLAGS) $(TARGET_CFLAGS) --analyze $(SAFLAGS) $<$(ACTION_SUFFIX)"
	@$(CLANG) $(TARGET_GLOBAL_CFLAGS) $(TARGET_GLOBAL_C32FLAGS) $(TARGET_CFLAGS) --analyze $(SAFLAGS) $<

%$(TARGET_ASM64_OBJECT_SUFFIX): %.asm
	@$(ECHO) "$(ACTION_PREFIX)$(NASM) $(TARGET_GLOBAL_ASMFLAGS) $(TARGET_GLOBAL_ASM64FLAGS) $(TARGET_ASMFLAGS) -o $@ $<$(ACTION_SUFFIX)"
	@$(NASM) $(TARGET_GLOBAL_ASMFLAGS) $(TARGET_GLOBAL_ASMFLAGS64) $(TARGET_ASMFLAGS) -o $@ $<

%$(TARGET_ASM32_OBJECT_SUFFIX): %.asm
	@$(ECHO) "$(ACTION_PREFIX)$(NASM) $(TARGET_GLOBAL_ASMFLAGS) $(TARGET_GLOBAL_ASM32FLAGS) $(TARGET_ASMFLAGS) -o $@ $<$(ACTION_SUFFIX)"
	@$(NASM) $(TARGET_GLOBAL_ASMFLAGS) $(TARGET_GLOBAL_ASM32FLAGS) $(TARGET_ASMFLAGS) -o $@ $<

%$(TARGET_STATIC_LIB_SUFFIX):
	@$(ECHO) "$(ACTION_PREFIX)$(TARGET_STATIC_LIB_TOOL)$(ACTION_SUFFIX)"
	@$(TARGET_STATIC_LIB_TOOL)

%$(TARGET_STATIC_OBJECT_SUFFIX):
	@$(ECHO) "$(ACTION_PREFIX)$(TARGET_STATIC_OBJECT_TOOL)$(ACTION_SUFFIX)"
	@$(TARGET_STATIC_OBJECT_TOOL)

%$(TARGET_RAW_SUFFIX): %.asm
	@$(ECHO) "$(ACTION_PREFIX)$(NASM) $(TARGET_GLOBAL_RAW_ASMFLAGS) $(TARGET_RAW_ASMFLAGS) -o $@ $<$(ACTION_SUFFIX)"
	@$(NASM) $(TARGET_GLOBAL_RAW_ASMFLAGS) $(TARGET_RAW_ASMFLAGS) -o $@ $<

%$(TARGET_RAW_SUFFIX): %$(TARGET_STATIC_OBJECT_SUFFIX)
	@$(ECHO) "$(ACTION_PREFIX)$(LLVMOBJCOPY) -O binary $< $@$(ACTION_SUFFIX)"
	@$(LLVMOBJCOPY) -O binary $< $@

.PHONY: clean_common
clean_common:
	@$(ECHO) "$(ACTION_PREFIX)"
	-$(RMDIR) $(ALONIRA_DIR)/lib
	-$(RMDIR) $(ALONIRA_DIR)/tmp
	@$(ECHO) "$(ACTION_SUFFIX)"

$(ALONIRA_DIR)/lib $(ALONIRA_DIR)/tmp:
	@$(ECHO) "$(ACTION_PREFIX)$(MKDIR) $@$(ACTION_SUFFIX)"
	-@$(MKDIR) $@

MODULES = $(wildcard $(ALONIRA_DIR)/alonira/*.mk)
MODULE_NAMES = $(subst $(ALONIRA_DIR)/alonira/,,$(subst .mk,,$(MODULES)))
CLEAN_TARGETS = $(addprefix clean_,$(MODULE_NAMES)) clean_common
TEST_TARGETS = $(addprefix test_,$(MODULE_NAMES))

include $(MODULES)
