ifeq ($(ARCH), x86_64)
	TARGET_LIB_PREFIX = lib
	TARGET_STATIC_LIB_SUFFIX = .target.a
	TARGET_STATIC_OBJECT_SUFFIX = .target.elf
	TARGET_RAW_SUFFIX = .target.bin

	TARGET_OBJECT_SUFFIX = .target.o
	TARGET_C_OBJECT_SUFFIX = .c$(TARGET_OBJECT_SUFFIX)
	TARGET_C64_OBJECT_SUFFIX = .64$(TARGET_C_OBJECT_SUFFIX)
	TARGET_C32_OBJECT_SUFFIX = .32$(TARGET_C_OBJECT_SUFFIX)
	TARGET_ASM_OBJECT_SUFFIX = .asm$(TARGET_OBJECT_SUFFIX)
	TARGET_ASM64_OBJECT_SUFFIX = .64$(TARGET_ASM_OBJECT_SUFFIX)
	TARGET_ASM32_OBJECT_SUFFIX = .32$(TARGET_ASM_OBJECT_SUFFIX)

	TARGET_GLOBAL_CFLAGS += -mcmodel=kernel -ffreestanding -fno-builtin -fno-pic -mno-red-zone -mno-stack-arg-probe
	TARGET_GLOBAL_CFLAGS += -fno-threadsafe-statics -mno-80387 -mno-mmx -mno-3dnow -mno-sse -mno-sse2 -fno-strict-aliasing -mgeneral-regs-only
	TARGET_GLOBAL_C64FLAGS += --target=x86_64-unknown-none
	TARGET_GLOBAL_C32FLAGS += --target=i686-unknown-none
	TARGET_GLOBAL_ASM64FLAGS += -felf64
	TARGET_GLOBAL_ASM32FLAGS += -felf32
	TARGET_GLOBAL_RAW_ASMFLAGS += -fbin

	TARGET_STATIC_LIB_TOOL = $(LLVMAR) -r -c $@ $(filter %$(TARGET_OBJECT_SUFFIX),$^)
	TARGET_STATIC_OBJECT_TOOL = $(LLD) -flavor ld -static $(TARGET_GLOBAL_LFLAGS) $(addprefix -L,$(TARGET_LIBDIRS)) $(TARGET_LFLAGS) -o $@ $(filter %$(TARGET_OBJECT_SUFFIX),$^)
endif
